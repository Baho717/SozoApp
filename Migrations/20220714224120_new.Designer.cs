// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SozoApothecary;

#nullable disable

namespace SozoApothecary.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220714224120_new")]
    partial class @new
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("SozoApothecary.Models.CurrentMedication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Dosage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DrugInformation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DrugInteractions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MedicationAmount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CurrentMedications");
                });

            modelBuilder.Entity("SozoApothecary.Models.DoctorsAppointment", b =>
                {
                    b.Property<int>("IDVisit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("DoctorName")
                        .HasColumnType("TEXT");

                    b.Property<string>("HospitalName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IDVisit");

                    b.ToTable("DoctorsAppointments");
                });

            modelBuilder.Entity("SozoApothecary.Models.MedicationHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Dosage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MedicationAmount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("MedicationHistories");
                });

            modelBuilder.Entity("SozoApothecary.Models.VisitLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VisitLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
